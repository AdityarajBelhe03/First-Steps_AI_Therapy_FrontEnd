// This file is generated by Firebase Studio.
'use server';
/**
 * @fileOverview This file defines a Genkit flow for detecting the emotion in a user's message.
 *
 * It uses the classifyEmotion service to determine the user's emotion and returns the result.
 *
 * - detectUserEmotion - A function that takes a user message as input and returns the detected emotion.
 * - DetectUserEmotionInput - The input type for the detectUserEmotion function.
 * - DetectUserEmotionOutput - The return type for the detectUserEmotion function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';
import {classifyEmotion, EmotionResult} from '@/services/emotion-classifier';

const DetectUserEmotionInputSchema = z.object({
  message: z.string().describe('The user message to analyze for emotion.'),
});
export type DetectUserEmotionInput = z.infer<typeof DetectUserEmotionInputSchema>;

const DetectUserEmotionOutputSchema = z.object({
  emotion: z.object({
    label: z.string().describe('The label of the detected emotion (e.g., joy, sadness, anger).'),
    score: z.number().describe('The confidence score associated with the detected emotion, ranging from 0 to 1.'),
  }).describe('The emotion detected in the user message.'),
});
export type DetectUserEmotionOutput = z.infer<typeof DetectUserEmotionOutputSchema>;

export async function detectUserEmotion(input: DetectUserEmotionInput): Promise<DetectUserEmotionOutput> {
  return detectUserEmotionFlow(input);
}

const detectUserEmotionFlow = ai.defineFlow<
  typeof DetectUserEmotionInputSchema,
  typeof DetectUserEmotionOutputSchema
>({
  name: 'detectUserEmotionFlow',
  inputSchema: DetectUserEmotionInputSchema,
  outputSchema: DetectUserEmotionOutputSchema,
}, async (input) => {
  const emotionResult: EmotionResult = await classifyEmotion(input.message);
  return {
    emotion: emotionResult,
  };
});
